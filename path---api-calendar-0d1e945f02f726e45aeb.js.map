{"version":3,"sources":["webpack:///path---api-calendar-0d1e945f02f726e45aeb.js","webpack:///./.cache/json/api-calendar.json"],"names":["webpackJsonp","./.cache/json/api-calendar.json","module","exports","data","componentMetadata","displayName","doclets","public","props","name","defaultValue","ignore","type","value","raw","description","childMarkdownRemark","html","computed","example","controllable","moveBack","required","moveForward","frontmatter","shortcuts","pathContext"],"mappings":"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","file":"path---api-calendar-0d1e945f02f726e45aeb.js","sourcesContent":["webpackJsonp([\"path---api-calendar\"],{\n\n/***/ \"./.cache/json/api-calendar.json\":\n/***/ (function(module, exports) {\n\nmodule.exports = {\"data\":{\"componentMetadata\":{\"displayName\":\"Calendar\",\"doclets\":{\"public\":true},\"props\":[{\"name\":\"activeId\",\"defaultValue\":null,\"doclets\":{\"ignore\":true},\"type\":{\"name\":\"string\",\"value\":null,\"raw\":null},\"description\":null},{\"name\":\"disabled\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"bool\",\"value\":null,\"raw\":\"CustomPropTypes.disabled\"},\"description\":null},{\"name\":\"readOnly\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"bool\",\"value\":null,\"raw\":\"CustomPropTypes.disabled\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Controls the read-only state of the Calendar.</p>\"}}},{\"name\":\"onChange\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"func\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A callback fired when the current <code>value</code> changes.</p>\"}}},{\"name\":\"value\",\"defaultValue\":{\"value\":\"null\",\"computed\":false},\"doclets\":{},\"type\":{\"name\":\"instanceOf\",\"value\":\"Date\",\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Controls the current value of the Calendar.</p>\"}}},{\"name\":\"min\",\"defaultValue\":{\"value\":\"new Date(1900, 0, 1)\",\"computed\":false},\"doclets\":{\"example\":\"['prop', ['min', 'new Date()']]\"},\"type\":{\"name\":\"instanceOf\",\"value\":\"Date\",\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>The minimum date that the Calendar can navigate from.</p>\"}}},{\"name\":\"max\",\"defaultValue\":{\"value\":\"new Date(2099, 11, 31)\",\"computed\":false},\"doclets\":{\"example\":\"['prop', ['max', 'new Date()']]\"},\"type\":{\"name\":\"instanceOf\",\"value\":\"Date\",\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>The maximum date that the Calendar can navigate to.</p>\"}}},{\"name\":\"currentDate\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"instanceOf\",\"value\":\"Date\",\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Default current date at which the calendar opens. If none is provided, opens at today's date or the <code>value</code> date (if any).</p>\"}}},{\"name\":\"onCurrentDateChange\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"func\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Change event Handler that is called when the currentDate is changed. The handler is called with the currentDate object.</p>\"}}},{\"name\":\"view\",\"defaultValue\":null,\"doclets\":{\"type\":\"{(\\\"month\\\"|\\\"year\\\"|\\\"decade\\\"|\\\"century\\\")}\",\"controllable\":\"onViewChange\"},\"type\":{\"name\":\"enum\",\"value\":[\"\\\"month\\\"\",\"\\\"year\\\"\",\"\\\"decade\\\"\",\"\\\"century\\\"\"],\"raw\":\"function(props, ...args) {\\n  return PropTypes.oneOf(props.views || VIEW_OPTIONS)(props, ...args);\\n}\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Controls the currently displayed calendar view. Use <code>defaultView</code> to set a unique starting view.</p>\"}}},{\"name\":\"views\",\"defaultValue\":{\"value\":\"Object.keys(views).map(k => views[k])\",\"computed\":true},\"doclets\":{\"type\":\"array<\\\"month\\\"|\\\"year\\\"|\\\"decade\\\"|\\\"century\\\">\"},\"type\":{\"name\":\"array<\\\"month\\\"|\\\"year\\\"|\\\"decade\\\"|\\\"century\\\">\",\"value\":{\"name\":\"enum\",\"computed\":true,\"value\":\"VIEW_OPTIONS\"},\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Defines a list of views the Calendar can traverse through, starting with the\\nfirst in the list to the last.</p>\"}}},{\"name\":\"onViewChange\",\"defaultValue\":null,\"doclets\":{\"controllable\":\"view\"},\"type\":{\"name\":\"func\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A callback fired when the <code>view</code> changes.</p>\"}}},{\"name\":\"onNavigate\",\"defaultValue\":null,\"doclets\":{\"type\":\"function(date: ?Date, direction: string, view: string)\"},\"type\":{\"name\":\"function(date: ?Date, direction: string, view: string)\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Callback fired when the Calendar navigates between views, or forward and backwards in time.</p>\"}}},{\"name\":\"culture\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"string\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Set the culture of the Calendar, passed to the configured localizer.</p>\"}}},{\"name\":\"autoFocus\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"bool\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Pass focus to the Calendar when it mounts.</p>\"}}},{\"name\":\"footer\",\"defaultValue\":{\"value\":\"true\",\"computed\":false},\"doclets\":{\"example\":\"['prop', ['footer', true]]\"},\"type\":{\"name\":\"bool\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Show or hide the Calendar footer.</p>\"}}},{\"name\":\"dayComponent\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"union\",\"value\":[\"ReactComponent\",\"string\"],\"raw\":\"CustomPropTypes.elementType\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Provide a custom component to render the days of the month. The Component is provided the following props</p>\\n<ul>\\n<li><code>date</code>: a <code>Date</code> object for the day of the month to render</li>\\n<li><code>label</code>: a formatted <code>string</code> of the date to render. To adjust the format of the <code>label</code> string use the <code>dateFormat</code> prop, listed below.</li>\\n</ul>\"}}},{\"name\":\"headerFormat\",\"defaultValue\":null,\"doclets\":{\"example\":\"['dateFormat', ['headerFormat', \\\"{ date: 'medium' }\\\"]]\"},\"type\":{\"name\":\"union\",\"value\":[\"string\",\"(value: Date, culture: ?string, localizer: Localizer) => string\"],\"raw\":\"CustomPropTypes.dateFormat\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A formatter for the header button of the month view.</p>\"}}},{\"name\":\"footerFormat\",\"defaultValue\":null,\"doclets\":{\"example\":\"['dateFormat', ['footerFormat', \\\"{ date: 'medium' }\\\", \\\"date => 'Today is: ' + formatter(date)\\\"]]\"},\"type\":{\"name\":\"union\",\"value\":[\"string\",\"(value: Date, culture: ?string, localizer: Localizer) => string\"],\"raw\":\"CustomPropTypes.dateFormat\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A formatter for the Calendar footer, formats today's Date as a string.</p>\"}}},{\"name\":\"dayFormat\",\"defaultValue\":null,\"doclets\":{\"example\":\"['prop', { dayFormat: \\\"day => \\\\n['🎉', 'M', 'T','W','Th', 'F', '🎉'][day.getDay()]\\\" }]\"},\"type\":{\"name\":\"union\",\"value\":[\"string\",\"(value: Date, culture: ?string, localizer: Localizer) => string\"],\"raw\":\"CustomPropTypes.dateFormat\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A formatter calendar days of the week, the default formats each day as a Narrow name: \\\"Mo\\\", \\\"Tu\\\", etc.</p>\"}}},{\"name\":\"dateFormat\",\"defaultValue\":null,\"doclets\":{\"example\":\"['prop', { dateFormat: \\\"dt => String(dt.getDate())\\\" }]\"},\"type\":{\"name\":\"union\",\"value\":[\"string\",\"(value: Date, culture: ?string, localizer: Localizer) => string\"],\"raw\":\"CustomPropTypes.dateFormat\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A formatter for day of the month</p>\"}}},{\"name\":\"monthFormat\",\"defaultValue\":null,\"doclets\":{\"example\":\"['dateFormat', ['monthFormat', \\\"{ raw: 'MMMM' }\\\", null, { defaultView: '\\\"year\\\"' }]]\"},\"type\":{\"name\":\"union\",\"value\":[\"string\",\"(value: Date, culture: ?string, localizer: Localizer) => string\"],\"raw\":\"CustomPropTypes.dateFormat\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A formatter for month name.</p>\"}}},{\"name\":\"yearFormat\",\"defaultValue\":null,\"doclets\":{\"example\":\"['dateFormat', ['yearFormat', \\\"{ raw: 'yy' }\\\", null, { defaultView: '\\\"decade\\\"' }]]\"},\"type\":{\"name\":\"union\",\"value\":[\"string\",\"(value: Date, culture: ?string, localizer: Localizer) => string\"],\"raw\":\"CustomPropTypes.dateFormat\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A formatter for month name.</p>\"}}},{\"name\":\"decadeFormat\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"union\",\"value\":[\"string\",\"(value: Date, culture: ?string, localizer: Localizer) => string\"],\"raw\":\"CustomPropTypes.dateFormat\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A formatter for decade, the default formats the first and last year of the decade like: 2000 - 2009.</p>\"}}},{\"name\":\"centuryFormat\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"union\",\"value\":[\"string\",\"(value: Date, culture: ?string, localizer: Localizer) => string\"],\"raw\":\"CustomPropTypes.dateFormat\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A formatter for century, the default formats the first and last year of the century like: 1900 - 1999.</p>\"}}},{\"name\":\"messages\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"shape\",\"value\":{\"moveBack\":{\"name\":\"string\",\"required\":false},\"moveForward\":{\"name\":\"string\",\"required\":false}},\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Object hash containing display text and/or text for screen readers.\\nUse the <code>messages</code> object to localize widget text or provide custom rendering.</p>\"}}},{\"name\":\"onKeyDown\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"func\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>The native <code>onKeyDown</code> event, called <code>preventDefault</code> will prevent any custom behavior, included keyboard shortcuts.</p>\"}}},{\"name\":\"tabIndex\",\"defaultValue\":{\"value\":\"'0'\",\"computed\":false},\"doclets\":{\"ignore\":true},\"type\":{\"name\":\"any\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>The HTML <code>tabindex</code> attribute, controls the order in which focus moves\\nvia the TAB key</p>\"}}}],\"description\":{\"childMarkdownRemark\":{\"frontmatter\":{\"shortcuts\":null},\"html\":\"\"}}}},\"pathContext\":{\"displayName\":\"Calendar\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---api-calendar-0d1e945f02f726e45aeb.js","module.exports = {\"data\":{\"componentMetadata\":{\"displayName\":\"Calendar\",\"doclets\":{\"public\":true},\"props\":[{\"name\":\"activeId\",\"defaultValue\":null,\"doclets\":{\"ignore\":true},\"type\":{\"name\":\"string\",\"value\":null,\"raw\":null},\"description\":null},{\"name\":\"disabled\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"bool\",\"value\":null,\"raw\":\"CustomPropTypes.disabled\"},\"description\":null},{\"name\":\"readOnly\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"bool\",\"value\":null,\"raw\":\"CustomPropTypes.disabled\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Controls the read-only state of the Calendar.</p>\"}}},{\"name\":\"onChange\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"func\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A callback fired when the current <code>value</code> changes.</p>\"}}},{\"name\":\"value\",\"defaultValue\":{\"value\":\"null\",\"computed\":false},\"doclets\":{},\"type\":{\"name\":\"instanceOf\",\"value\":\"Date\",\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Controls the current value of the Calendar.</p>\"}}},{\"name\":\"min\",\"defaultValue\":{\"value\":\"new Date(1900, 0, 1)\",\"computed\":false},\"doclets\":{\"example\":\"['prop', ['min', 'new Date()']]\"},\"type\":{\"name\":\"instanceOf\",\"value\":\"Date\",\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>The minimum date that the Calendar can navigate from.</p>\"}}},{\"name\":\"max\",\"defaultValue\":{\"value\":\"new Date(2099, 11, 31)\",\"computed\":false},\"doclets\":{\"example\":\"['prop', ['max', 'new Date()']]\"},\"type\":{\"name\":\"instanceOf\",\"value\":\"Date\",\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>The maximum date that the Calendar can navigate to.</p>\"}}},{\"name\":\"currentDate\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"instanceOf\",\"value\":\"Date\",\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Default current date at which the calendar opens. If none is provided, opens at today's date or the <code>value</code> date (if any).</p>\"}}},{\"name\":\"onCurrentDateChange\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"func\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Change event Handler that is called when the currentDate is changed. The handler is called with the currentDate object.</p>\"}}},{\"name\":\"view\",\"defaultValue\":null,\"doclets\":{\"type\":\"{(\\\"month\\\"|\\\"year\\\"|\\\"decade\\\"|\\\"century\\\")}\",\"controllable\":\"onViewChange\"},\"type\":{\"name\":\"enum\",\"value\":[\"\\\"month\\\"\",\"\\\"year\\\"\",\"\\\"decade\\\"\",\"\\\"century\\\"\"],\"raw\":\"function(props, ...args) {\\n  return PropTypes.oneOf(props.views || VIEW_OPTIONS)(props, ...args);\\n}\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Controls the currently displayed calendar view. Use <code>defaultView</code> to set a unique starting view.</p>\"}}},{\"name\":\"views\",\"defaultValue\":{\"value\":\"Object.keys(views).map(k => views[k])\",\"computed\":true},\"doclets\":{\"type\":\"array<\\\"month\\\"|\\\"year\\\"|\\\"decade\\\"|\\\"century\\\">\"},\"type\":{\"name\":\"array<\\\"month\\\"|\\\"year\\\"|\\\"decade\\\"|\\\"century\\\">\",\"value\":{\"name\":\"enum\",\"computed\":true,\"value\":\"VIEW_OPTIONS\"},\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Defines a list of views the Calendar can traverse through, starting with the\\nfirst in the list to the last.</p>\"}}},{\"name\":\"onViewChange\",\"defaultValue\":null,\"doclets\":{\"controllable\":\"view\"},\"type\":{\"name\":\"func\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A callback fired when the <code>view</code> changes.</p>\"}}},{\"name\":\"onNavigate\",\"defaultValue\":null,\"doclets\":{\"type\":\"function(date: ?Date, direction: string, view: string)\"},\"type\":{\"name\":\"function(date: ?Date, direction: string, view: string)\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Callback fired when the Calendar navigates between views, or forward and backwards in time.</p>\"}}},{\"name\":\"culture\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"string\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Set the culture of the Calendar, passed to the configured localizer.</p>\"}}},{\"name\":\"autoFocus\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"bool\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Pass focus to the Calendar when it mounts.</p>\"}}},{\"name\":\"footer\",\"defaultValue\":{\"value\":\"true\",\"computed\":false},\"doclets\":{\"example\":\"['prop', ['footer', true]]\"},\"type\":{\"name\":\"bool\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Show or hide the Calendar footer.</p>\"}}},{\"name\":\"dayComponent\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"union\",\"value\":[\"ReactComponent\",\"string\"],\"raw\":\"CustomPropTypes.elementType\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Provide a custom component to render the days of the month. The Component is provided the following props</p>\\n<ul>\\n<li><code>date</code>: a <code>Date</code> object for the day of the month to render</li>\\n<li><code>label</code>: a formatted <code>string</code> of the date to render. To adjust the format of the <code>label</code> string use the <code>dateFormat</code> prop, listed below.</li>\\n</ul>\"}}},{\"name\":\"headerFormat\",\"defaultValue\":null,\"doclets\":{\"example\":\"['dateFormat', ['headerFormat', \\\"{ date: 'medium' }\\\"]]\"},\"type\":{\"name\":\"union\",\"value\":[\"string\",\"(value: Date, culture: ?string, localizer: Localizer) => string\"],\"raw\":\"CustomPropTypes.dateFormat\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A formatter for the header button of the month view.</p>\"}}},{\"name\":\"footerFormat\",\"defaultValue\":null,\"doclets\":{\"example\":\"['dateFormat', ['footerFormat', \\\"{ date: 'medium' }\\\", \\\"date => 'Today is: ' + formatter(date)\\\"]]\"},\"type\":{\"name\":\"union\",\"value\":[\"string\",\"(value: Date, culture: ?string, localizer: Localizer) => string\"],\"raw\":\"CustomPropTypes.dateFormat\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A formatter for the Calendar footer, formats today's Date as a string.</p>\"}}},{\"name\":\"dayFormat\",\"defaultValue\":null,\"doclets\":{\"example\":\"['prop', { dayFormat: \\\"day => \\\\n['🎉', 'M', 'T','W','Th', 'F', '🎉'][day.getDay()]\\\" }]\"},\"type\":{\"name\":\"union\",\"value\":[\"string\",\"(value: Date, culture: ?string, localizer: Localizer) => string\"],\"raw\":\"CustomPropTypes.dateFormat\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A formatter calendar days of the week, the default formats each day as a Narrow name: \\\"Mo\\\", \\\"Tu\\\", etc.</p>\"}}},{\"name\":\"dateFormat\",\"defaultValue\":null,\"doclets\":{\"example\":\"['prop', { dateFormat: \\\"dt => String(dt.getDate())\\\" }]\"},\"type\":{\"name\":\"union\",\"value\":[\"string\",\"(value: Date, culture: ?string, localizer: Localizer) => string\"],\"raw\":\"CustomPropTypes.dateFormat\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A formatter for day of the month</p>\"}}},{\"name\":\"monthFormat\",\"defaultValue\":null,\"doclets\":{\"example\":\"['dateFormat', ['monthFormat', \\\"{ raw: 'MMMM' }\\\", null, { defaultView: '\\\"year\\\"' }]]\"},\"type\":{\"name\":\"union\",\"value\":[\"string\",\"(value: Date, culture: ?string, localizer: Localizer) => string\"],\"raw\":\"CustomPropTypes.dateFormat\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A formatter for month name.</p>\"}}},{\"name\":\"yearFormat\",\"defaultValue\":null,\"doclets\":{\"example\":\"['dateFormat', ['yearFormat', \\\"{ raw: 'yy' }\\\", null, { defaultView: '\\\"decade\\\"' }]]\"},\"type\":{\"name\":\"union\",\"value\":[\"string\",\"(value: Date, culture: ?string, localizer: Localizer) => string\"],\"raw\":\"CustomPropTypes.dateFormat\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A formatter for month name.</p>\"}}},{\"name\":\"decadeFormat\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"union\",\"value\":[\"string\",\"(value: Date, culture: ?string, localizer: Localizer) => string\"],\"raw\":\"CustomPropTypes.dateFormat\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A formatter for decade, the default formats the first and last year of the decade like: 2000 - 2009.</p>\"}}},{\"name\":\"centuryFormat\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"union\",\"value\":[\"string\",\"(value: Date, culture: ?string, localizer: Localizer) => string\"],\"raw\":\"CustomPropTypes.dateFormat\"},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>A formatter for century, the default formats the first and last year of the century like: 1900 - 1999.</p>\"}}},{\"name\":\"messages\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"shape\",\"value\":{\"moveBack\":{\"name\":\"string\",\"required\":false},\"moveForward\":{\"name\":\"string\",\"required\":false}},\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Object hash containing display text and/or text for screen readers.\\nUse the <code>messages</code> object to localize widget text or provide custom rendering.</p>\"}}},{\"name\":\"onKeyDown\",\"defaultValue\":null,\"doclets\":{},\"type\":{\"name\":\"func\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>The native <code>onKeyDown</code> event, called <code>preventDefault</code> will prevent any custom behavior, included keyboard shortcuts.</p>\"}}},{\"name\":\"tabIndex\",\"defaultValue\":{\"value\":\"'0'\",\"computed\":false},\"doclets\":{\"ignore\":true},\"type\":{\"name\":\"any\",\"value\":null,\"raw\":null},\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>The HTML <code>tabindex</code> attribute, controls the order in which focus moves\\nvia the TAB key</p>\"}}}],\"description\":{\"childMarkdownRemark\":{\"frontmatter\":{\"shortcuts\":null},\"html\":\"\"}}}},\"pathContext\":{\"displayName\":\"Calendar\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.cache/json/api-calendar.json\n// module id = ./.cache/json/api-calendar.json\n// module chunks = path---api-calendar"],"sourceRoot":""}