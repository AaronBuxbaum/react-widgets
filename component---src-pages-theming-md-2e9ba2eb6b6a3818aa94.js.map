{"version":3,"sources":["webpack:///./src/pages/theming.md","webpack:///./plugins/gatsby-plugin-jsxtreme-markdown/prism.js","webpack:///./src/components/TabbedCodeBlock.js"],"names":["React","__webpack_require__","Helmet","default","TabbedCodeBlock","Tab","props","createElement","_extends","__source","fileName","_jsxFileName","lineNumber","__self","this","module","exports","_ref","scope","style","className","title","lang","172","e","t","s","n","highlight","languages","code","language","text","count","__webpack_exports__","children","react__WEBPACK_IMPORTED_MODULE_1___default","a","react_bootstrap_lib_Tabs__WEBPACK_IMPORTED_MODULE_2___default","defaultActiveKey","id","Children","map","_ref2","idx","html","react_bootstrap_lib_Tab__WEBPACK_IMPORTED_MODULE_3___default","eventKey","dangerouslySetInnerHTML","__html","_plugins_gatsby_plugin_jsxtreme_markdown_prism__WEBPACK_IMPORTED_MODULE_4___default","Object","common_tags__WEBPACK_IMPORTED_MODULE_0__","replace"],"mappings":"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","file":"component---src-pages-theming-md-2e9ba2eb6b6a3818aa94.js","sourcesContent":["var React = require('react')\n      var Helmet = require('react-helmet').default\n      var EditableExample = require('../components/EditableExample').default;\n      var TabbedCodeBlock = require('../components/TabbedCodeBlock').default;\n\n      const Tab = (props) => <div {...props} />\n\n      module.exports = function Page({ scope, style, className }) {\n        return (\n          <section className={className} style={style}>\n            <Helmet title=\"theming\" />\n            <div>\n  <h1>Theming</h1>\n  <p>The included styles mimic the defaults of Twitter Bootstrap 3.0. <strong>This is less an actual theme and more a\n      neutral starting point for creating your own theme.</strong> Less and Sass versions of the styles are included in\n    the react-widgets package, and can be tweaked or replaced to suit your needs.</p>\n  <p>Follow the conventions for overriding default variable values for either Less or Sass, depending on what you use. All\n    are stored in a <code>variables</code> file, see <code>./lib/{'{'}less,scss{'}'}/variables.{'{'}less,scss{'}'}</code> for reference. There are a ton\n    of knobs to tweak!</p>\n  <h3>Font and Input sizes</h3>\n  <p>Component sizing is done via <code>em</code> units, and the base font-size is <code>1em</code> enabling components to scale with the surrounding\n    font-size. If you want to use a fixed size adjust the <code>font-size</code> variable. Using the default values, inputs look best\n    at <code>14px</code>, but you can also tweak the input height for different root font-sizes.</p>\n  <TabbedCodeBlock>\n<Tab title=\"Sass\" lang=\"scss\">\n{`\n$font-size: 16px;\n$input-height: 2.5em; // at 16px, this an even 40px\n\n    @import '~react-widgets/lib/scss/react-widgets';\n    `}\n\n  </Tab>\n  <Tab title=\"Less\" lang=\"less\">\n    {`\n    @import '~react-widgets/lib/less/react-widgets';\n\n    @font-size: 16px;\n    @input-height: 2.5em; // at 16px, this an even 40px\n    `}\n\n  </Tab>\n</TabbedCodeBlock>\n</div>\n\n          </section>\n        )\n      }","/*** IMPORTS FROM imports-loader ***/\nvar define = false;\nvar __VERSION__ = \"4.2.3\";\n\nconst { highlight, languages } = require('prismjs/components/prism-core')\nrequire('prismjs/components/prism-clike')\nrequire('prismjs/components/prism-javascript')\nrequire('prismjs/components/prism-markup')\nrequire('prismjs/components/prism-jsx')\nrequire('prismjs/components/prism-css')\nrequire('prismjs/components/prism-less')\nrequire('prismjs/components/prism-scss')\n\nmodule.exports = (code, language = 'jsx') =>\n  highlight(code, languages[language] || languages.text)\n\n// var javascript = Prism.util.clone(Prism.languages.javascript)\n\n// Prism.languages.jsx = Prism.languages.extend('markup', javascript)\n// Prism.languages.jsx.tag.pattern = /<\\/?[\\w\\.:-]+\\s*(?:\\s+(?:[\\w\\.:-]+(?:=(?:(\"|')(\\\\?[\\s\\S])*?\\1|[^\\s'\">=]+|(\\{[\\s\\S]*?\\})))?|\\{\\.{3}\\w+\\}))*\\s*\\/?>/i\n\n// Prism.languages.jsx.tag.inside['attr-value'] = {\n//   pattern: /=(?!\\{)(?:('|\")[\\s\\S]*?(\\1)|[^\\s>]+)/i,\n//   inside: {\n//     punctuation: /[=\"'{}]/,\n//   },\n// }\n\n// Prism.languages.insertBefore(\n//   'inside',\n//   'attr-name',\n//   {\n//     spread: {\n//       pattern: /\\{\\.{3}\\w+\\}/,\n//       inside: {\n//         punctuation: /\\{|\\}|\\./,\n//         'attr-value': /\\w+/,\n//       },\n//     },\n//   },\n//   Prism.languages.jsx.tag\n// )\n\n// var jsxExpression = Prism.util.clone(Prism.languages.jsx)\n\n// delete jsxExpression.punctuation\n\n// jsxExpression = Prism.languages.insertBefore(\n//   'jsx',\n//   'operator',\n//   {\n//     punctuation: /=(?={)|[{}[\\];(),.:]/,\n//   },\n//   { jsx: jsxExpression }\n// )\n\n// Prism.languages.insertBefore(\n//   'inside',\n//   'attr-value',\n//   {\n//     script: {\n//       // Allow for one level of nesting\n//       pattern: /=(\\{(?:\\{[^}]*\\}|[^}])+\\})/i,\n//       inside: jsxExpression,\n//       alias: 'language-javascript',\n//     },\n//   },\n//   Prism.languages.jsx.tag\n// )\n\n// Prism.languages.insertBefore('jsx', {\n//   identifier: /\\b[a-zA-Z0-9_]+/g,\n// })\n\n","/*** IMPORTS FROM imports-loader ***/\nvar define = false;\nvar __VERSION__ = \"4.2.3\";\n\nimport { stripIndent } from 'common-tags'\nimport React from 'react'\nimport Tabs from 'react-bootstrap/lib/Tabs'\nimport Tab from 'react-bootstrap/lib/Tab'\nimport prism from '../../plugins/gatsby-plugin-jsxtreme-markdown/prism'\n\nfunction unescape(html) {\n  return html\n    .replace(/&amp;/g, '&')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&quot;/g, '\"')\n    .replace(/&#39;/g, \"'\")\n}\n\nlet count = 0\nfunction TabbedCodeBlock({ children }) {\n  return (\n    <Tabs defaultActiveKey={0} id={`tab-code-block-${count++}`}>\n      {React.Children.map(children, ({ props }, idx) => {\n        return (\n          <Tab title={props.title} eventKey={idx}>\n            <pre className=\"pg-code-section\">\n              <code\n                dangerouslySetInnerHTML={{\n                  __html: prism(\n                    stripIndent([unescape(props.children)]),\n                    props.lang || 'jsx'\n                  ),\n                }}\n              />\n            </pre>\n          </Tab>\n        )\n      })}\n    </Tabs>\n  )\n}\n\nexport default TabbedCodeBlock\n\n"],"sourceRoot":""}