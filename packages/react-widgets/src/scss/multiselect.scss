.rw-multiselect {
  cursor: text;

  & > .rw-widget-picker {
    height: auto;
  }

  & .rw-select {
    vertical-align: middle;

    &,
    &:hover,
    &:active {
      box-shadow: none;
      background: none;
    }
  }
}

.rw-multiselect-input {
  @extend %rw-btn-input-reset;

  height: calc(#{$input-height} - #{$input-border-width * 2});
  padding: 0 $input-btn-padding-x;
  max-width: 100%; // breaks to a new line but doesn't stop growing

  &:disabled,
  &:read-only {
    // use parent style
    cursor: inherit;
  }
}

.rw-multiselect-taglist {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  flex: 1 1 0%;
  outline: none;
}

.rw-multiselect-tag {
  display: inline-flex;
  color: $multiselect-tag-color;
  margin-left: $multiselect-tag-gutter;
  margin-top: $multiselect-tag-gutter;
  min-height: $multiselect-tag-height;
  border-radius: $multiselect-tag-border-radius;
  background-color: $multiselect-tag-bg;
  border: 1px solid $multiselect-tag-border;
  // reset the text selection cursor on the parent
  cursor: default;
  max-width: 100%;
  align-items: center;

  &:focus {
    outline: none;
  }

  [dir='rtl'] & {
    margin-left: 0;
    margin-right: $multiselect-tag-gutter;
    padding: 0 $multiselect-tag-padding-left 0 $multiselect-tag-padding-right;
  }

  &.rw-state-focus {
    @include focus-ring();
  }

  &.rw-state-disabled,
  fieldset[disabled] & {
    opacity: 0.65;
  }
}

.rw-multiselect-tag-label {
  padding: 0 $multiselect-tag-padding-right 0 $multiselect-tag-padding-left;
}

.rw-multiselect-tag-btn {
  @extend %rw-btn-input-reset;

  cursor: pointer;
  align-self: stretch;
  color: $multiselect-tag-color;
  padding: 0 $multiselect-tag-button-padding;

  &:disabled {
    cursor: inherit;
  }
}
