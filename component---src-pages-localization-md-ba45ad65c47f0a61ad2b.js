webpackJsonp(["component---src-pages-localization-md"],{'./node_modules/babel-loader/lib/index.js?{"presets":[["/Users/jason/src/react-widgets/node_modules/babel-preset-jason/index.js",{"debug":false,"targets":{"browsers":["> 1%","last 4 versions","not ie < 9"]}}],["/Users/jason/src/react-widgets/www/node_modules/babel-preset-env/lib/index.js",{"loose":true,"uglify":true,"modules":"commonjs","targets":{"browsers":["> 1%","last 2 versions","IE >= 9"]},"exclude":["transform-regenerator","transform-es2015-typeof-symbol"]}],"/Users/jason/src/react-widgets/www/node_modules/babel-preset-stage-0/lib/index.js","/Users/jason/src/react-widgets/www/node_modules/babel-preset-react/lib/index.js"],"plugins":["/Users/jason/src/react-widgets/www/node_modules/babel-plugin-remove-graphql-queries/index.js","/Users/jason/src/react-widgets/node_modules/babel-plugin-transform-decorators-legacy/lib/index.js","/Users/jason/src/react-widgets/www/node_modules/babel-plugin-transform-object-assign/lib/index.js"],"cacheDirectory":true}!./plugins/gatsby-plugin-jsxtreme-markdown/loader.js!./src/pages/localization.md':function(e,t,a){"use strict";var n=a("./node_modules/react/react.js"),l=a("./node_modules/react-helmet/lib/Helmet.js").default,r=(a("./src/components/EditableExample.js").default,a("./src/components/TabbedCodeBlock.js").default),s=function(e){return n.createElement("div",e)};e.exports=function(e){var t=(e.scope,e.style),a=e.className;return n.createElement("section",{className:a,style:t},n.createElement(l,{title:"localization"}),n.createElement("div",null,n.createElement("h1",null,"Localization"),n.createElement("p",null,"In order to handle the complex international differences in number and date formats ",n.createElement("code",null,"react-widgets"),' relies on third party parsing and formatting libraries via an integration layer of "localizers". We maintain and support localizers for ',n.createElement("strong",null,"Globalize.js"),", ",n.createElement("strong",null,"Moment.js")," and a simple number localizer, but you can easily write your own for whichever library you are using."),n.createElement("p",null,"Localization sensitive widgets have ",n.createElement("code",null,"format")," props that passed directly to your chosen localizer. The type and shape of these format props is determined by the api of the backing i18n library. Moment.js, for instance, uses string based date formats like: ",n.createElement("code",null,"MMM dd YYYY")," whereas the newer Globalize.js may take an object like:",n.createElement("code",null,"{"," skeleton: GyMMMd ","}"),". Regardless of the localizer, formats ",n.createElement("strong",null,"always")," accept ",n.createElement("code",null,"function")," values for doing on-the-fly custom formatting."),n.createElement("h3",null,"Globalize.js (recommended) ",n.createElement("small",null,"date, number")),n.createElement("pre",{className:"pg-code-section"},n.createElement("code",{className:"language-sh"},"npm install globalize react-widgets-globalize --save","\n")),n.createElement("p",null,"Globalize can be a bit of a challenge to set up correctly so please consult the ",n.createElement("a",{href:"https://github.com/jquery/globalize#getting-started"},"globalize docs")," for a lot of info on setting up Globalize and integrating into lots of different app environments."),n.createElement("p",null,"The Globalize localizer handles both ",n.createElement("strong",null,"number")," and ",n.createElement("strong",null,"date")," localization so there is no need for any additional localizers."),n.createElement("p",null,n.createElement("em",null,"Note: the examples below are for Globalize ",n.createElement("code",null,">= v1.0.0"),", however the localizer supports ",n.createElement("code",null,"v0.1.0")," as well.")),n.createElement(r,null,n.createElement(s,{title:"webpack globalize plugin"},"\n    import Globalize from 'globalize';\n    import globalizeLocalizer from 'react-widgets-globalize';\n    import DateTimePicker from 'react-widgets/lib/DateTimePicker';\n\n    Globalize.locale('en')\n\n    globalizeLocalizer()\n\n    render(<DateTimePicker />, document.getElementById('app-root'))\n    "),n.createElement(s,{title:"browser globals"},"\n    <script src='node_modules/react-widgets/dist/react-widgets.js'><\/script>\n    <script src='node_modules/react-widgets-globalize/dist/react-widgets-globalize.js'><\/script>\n    <script>\n      var DateTimePicker = ReactWidgets.DateTimePicker;\n\n      ReactDOM.render(<DateTimePicker />, document.getElementById('app-root'))\n    <\/script>\n    ")),n.createElement("p",null,"While you ",n.createElement("em",null,"can")," use option objects and raw pattern strings directly as ",n.createElement("code",null,"format"),"s with react-widgets. It's ",n.createElement("a",{href:"https://github.com/globalizejs/globalize#compilation-and-the-runtime-modules"},"recommended")," that you use ",n.createElement("em",null,"statically")," determinable formatter functions instead. These can be extracted as part of your application's build step and compiled, ensuring applications only include exactly the i18n data needed."),n.createElement("pre",{className:"pg-code-section"},n.createElement("code",{className:"language-jsx"},"// dates","\n","let monthYearFormatter = Globalize.dateFormatter(","{"," raw: 'mmm YY' ","}",");","\n","let monthYearParser = Globalize.dateParser(","{"," raw: 'mmm YY' ","}",");","\n","\n","// numbers","\n","let percentFormatter = Globalize.numberFormatter(","{","\n","  ","style: 'percent',","\n","  ","maximumFractionDigits: 2","\n","}",");","\n","let percentParser = Globalize.numberParser(","{","\n","  ","style: 'percent',","\n","  ","maximumFractionDigits: 2","\n","}",");","\n","\n","return (","\n","  ","<div>","\n","    ","<DateTimePicker","\n","      ","format=","{","monthYearFormatter","}","\n","      ","parse=","{","monthYearParser","}","\n","    ","/>","\n","    ","<NumberPicker","\n","      ","format=","{","percentFormatter","}","\n","      ","parse=","{","percentParser","}","\n","    ","/>","\n","\n","    ","{","/* this is also supported but leads to much larger bundles */","}","\n","    ",'<DateTimePicker format="mmm YY" />',"\n","    ","<NumberPicker format=","{","{"," currency: 'USD', style: 'accounting' ","}","}"," />","\n","  ","</div>","\n",")","\n")),n.createElement("h3",null,"Moment.js ",n.createElement("small",null,"date")),n.createElement("pre",{className:"pg-code-section"},n.createElement("code",{className:"language-sh"},"npm install moment react-widgets-moment --save","\n")),n.createElement("p",null,"Again see the official ",n.createElement("a",{href:"http://momentjs.com/"},"Moment docs")," for information on integrating Moment into your build pipeline effectively."),n.createElement("p",null,"Moment only provides ",n.createElement("strong",null,"date")," localization, if you also need Number localization consider the ",n.createElement("strong",null,"simple-number")," localizer below, or Globalize.js."),n.createElement(r,null,n.createElement(s,{title:"webpack"},"\n    import Moment from 'moment'\n    import momentLocalizer from 'react-widgets-moment';\n    import DateTimePicker from 'react-widgets/lib/DateTimePicker';\n\n    Moment.locale('en')\n    momentLocalizer()\n\n    render(<DateTimePicker />, document.getElementById('app-root'))\n    "),n.createElement(s,{title:"browser globals"},"\n    <script src='node_modules/react-widgets/dist/react-widgets.js'><\/script>\n    <script src='node_modules/react-widgets-moment/dist/react-widgets-moment.js'><\/script>\n    <script>\n      var DateTimePicker = ReactWidgets.DateTimePicker;\n\n      ReactDOM.render(<DateTimePicker />, document.getElementById('app-root'))\n    <\/script>\n    ")),n.createElement("p",null,"Moment ",n.createElement("a",{href:"http://momentjs.com/docs/#/displaying/format/"},"format")," props accept ",n.createElement("code",null,"string"),"s"),n.createElement("pre",{className:"pg-code-section"},n.createElement("code",{className:"language-jsx"},"<DateTimePicker format='mmm YYY' />","\n")),n.createElement("h3",null,"Simple Number ",n.createElement("small",null,"number")),n.createElement("p",null,"The ",n.createElement("code",null,"simple-number")," localizer provides a minimal number formatting and parsing strategy. Its best when you don't need robust locale support for currencies, and numbers;"),n.createElement("pre",{className:"pg-code-section"},n.createElement("code",{className:"language-js"},n.createElement("span",{className:"token keyword"},"var")," numberLocalizer ",n.createElement("span",{className:"token operator"},"=")," ",n.createElement("span",{className:"token function"},"require"),n.createElement("span",{className:"token punctuation"},"("),n.createElement("span",{className:"token string"},"'react-widgets/lib/localizers/simple-number'"),n.createElement("span",{className:"token punctuation"},")"),"\n","\n",n.createElement("span",{className:"token function"},"numberLocalizer"),n.createElement("span",{className:"token punctuation"},"("),n.createElement("span",{className:"token punctuation"},")"),n.createElement("span",{className:"token punctuation"},";"),"\n")),n.createElement("p",null,"Or"),n.createElement("pre",{className:"pg-code-section"},n.createElement("code",{className:"language-html"},n.createElement("span",{className:"token tag"},n.createElement("span",{className:"token tag"},n.createElement("span",{className:"token punctuation"},"<"),"script")," ",n.createElement("span",{className:"token attr-name"},"src"),n.createElement("span",{className:"token attr-value"},n.createElement("span",{className:"token punctuation"},"="),n.createElement("span",{className:"token punctuation"},"'"),"node_modules/react-widgets/dist/react-widgets.js",n.createElement("span",{className:"token punctuation"},"'")),n.createElement("span",{className:"token punctuation"},">")),n.createElement("span",{className:"token script language-javascript"}),n.createElement("span",{className:"token tag"},n.createElement("span",{className:"token tag"},n.createElement("span",{className:"token punctuation"},"</"),"script"),n.createElement("span",{className:"token punctuation"},">")),"\n",n.createElement("span",{className:"token tag"},n.createElement("span",{className:"token tag"},n.createElement("span",{className:"token punctuation"},"<"),"script")," ",n.createElement("span",{className:"token attr-name"},"src"),n.createElement("span",{className:"token attr-value"},n.createElement("span",{className:"token punctuation"},"="),n.createElement("span",{className:"token punctuation"},"'"),"node_modules/react-widgets/dist/react-widgets-simple-number.js",n.createElement("span",{className:"token punctuation"},"'")),n.createElement("span",{className:"token punctuation"},">")),n.createElement("span",{className:"token script language-javascript"}),n.createElement("span",{className:"token tag"},n.createElement("span",{className:"token tag"},n.createElement("span",{className:"token punctuation"},"</"),"script"),n.createElement("span",{className:"token punctuation"},">")),"\n")),n.createElement(r,null,n.createElement(s,{title:"webpack globalize plugin"},"\n    import simpleNumberLocalizer from 'react-widgets-simple-number';\n    import NumberPicker from 'react-widgets/lib/NumberPicker';\n\n    simpleNumberLocalizer()\n\n    render(<NumberPicker />, document.getElementById('app-root'))\n    "),n.createElement(s,{title:"browser globals"},"\n    <script src='node_modules/react-widgets/dist/react-widgets.js'><\/script>\n    <script src='node_modules/react-widgets-simple-number/dist/react-widgets-simple-number.js'><\/script>\n    <script>\n      var NumberPicker = ReactWidgets.NumberPicker;\n\n      ReactDOM.render(<NumberPicker />, document.getElementById('app-root'))\n    <\/script>\n    ")),n.createElement("p",null,"Check out the documentation for ",n.createElement("a",{href:"https://www.npmjs.com/package/format-number-with-string"},"format-number-with-string")," for a complete guide to its format syntax."),n.createElement("pre",{className:"pg-code-section"},n.createElement("code",{className:"language-jsx"},"<NumberPicker format='-$#,###.00' />","\n")),n.createElement("h2",null,"Creating a Localizer"),n.createElement("p",null,"Creating a localizer is as easy as providing ",n.createElement("code",null,"react-widgets")," an localizer options object. Localizers must provide ",n.createElement("code",null,"parse()")," and ",n.createElement("code",null,"format()")," functions as well as provide default values for all the required formats the widgets need."),n.createElement("p",null,"Formats can be whatever type your localization strategy requires (strings, objects, etc), however functions are always valid. The default formats, for example, can be strings or functions. If you wanted to use the built-in ",n.createElement("code",null,"Intl")," api's for formatting, formats might be an options object to pass to ",n.createElement("code",null,"Intl.DateTimeFormat()"),". Function formats are called automatically by the localizer with the ",n.createElement("code",null,"value"),", the ",n.createElement("code",null,"culture")," string and the localizer instance."),n.createElement("pre",{className:"pg-code-section"},n.createElement("code",{className:"language-jsx"},"var localizer = ","{","\n","\n","  ","formats: ","{","\n","    ","day: 'DD',","\n","    ","month: 'mmm',","\n","    ","// function formats are useful for more advanced formatting, such as a","\n","    ","// year 'range' to represent a decade e.g \"2000 - 2009\".","\n","    ","// Notice the localizer instance is the third argument, which can be","\n","    ","// used to format or parse as needed.","\n","    ","decade: (date, cultureStr, localizer) => ","{","\n","      ","return (","\n","        ","localizer.format(date, 'YYYY') + ' - ' +","\n","        ","localizer.format(lastYearOfDecade(date), 'YYYY')","\n","      ",")","\n","    ","}","\n","  ","}",",","\n","\n","  ","parse(value, format, cultureStr) ","{","\n","    ","return parsedDate","\n","  ","}",",","\n","\n","  ","format(value, format, cultureStr) ","{","\n","    ","return formattedDatestring","\n","  ","}","\n","}","\n","\n","ReactWidgets.setDateLocalizer(localizer)","\n")),n.createElement("h2",null,"Localizer Api"),n.createElement("h3",null,n.createElement("code",null,"DateLocalizer")),n.createElement("p",null,"An Object implementing the following api."),n.createElement("pre",{className:"pg-code-section"},n.createElement("code",{className:"language-js"},"type Localizer ",n.createElement("span",{className:"token operator"},"=")," ",n.createElement("span",{className:"token punctuation"},"{"),"\n","  ","propType",n.createElement("span",{className:"token punctuation"},":")," PropType",n.createElement("span",{className:"token operator"},"?"),"\n","  ","firstOfWeek",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token punctuation"},"("),"culture",n.createElement("span",{className:"token punctuation"},":")," string",n.createElement("span",{className:"token punctuation"},")")," ",n.createElement("span",{className:"token operator"},"="),n.createElement("span",{className:"token operator"},">")," number","\n","  ","parse",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token punctuation"},"("),"date",n.createElement("span",{className:"token punctuation"},":")," string",n.createElement("span",{className:"token punctuation"},",")," format",n.createElement("span",{className:"token punctuation"},":")," string",n.createElement("span",{className:"token operator"},"|"),"object",n.createElement("span",{className:"token punctuation"},",")," culture",n.createElement("span",{className:"token punctuation"},":")," string",n.createElement("span",{className:"token operator"},"?"),n.createElement("span",{className:"token punctuation"},")"),n.createElement("span",{className:"token operator"},"="),n.createElement("span",{className:"token operator"},">")," Date ",n.createElement("span",{className:"token operator"},"|")," ",n.createElement("span",{className:"token keyword"},"null"),"\n","  ","format",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token punctuation"},"("),"date",n.createElement("span",{className:"token punctuation"},":")," Date",n.createElement("span",{className:"token punctuation"},",")," format",n.createElement("span",{className:"token punctuation"},":")," string",n.createElement("span",{className:"token operator"},"|"),"object",n.createElement("span",{className:"token punctuation"},",")," culture",n.createElement("span",{className:"token punctuation"},":")," string",n.createElement("span",{className:"token operator"},"?"),n.createElement("span",{className:"token punctuation"},")"),n.createElement("span",{className:"token operator"},"="),n.createElement("span",{className:"token operator"},">")," string","\n","  ","formats",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token punctuation"},"{"),"\n","    ",n.createElement("span",{className:"token keyword"},"default"),n.createElement("span",{className:"token punctuation"},":")," string ",n.createElement("span",{className:"token operator"},"|")," object ",n.createElement("span",{className:"token operator"},"|")," ",n.createElement("span",{className:"token keyword"},"function"),"\n","    ","date",n.createElement("span",{className:"token punctuation"},":")," string ",n.createElement("span",{className:"token operator"},"|")," object ",n.createElement("span",{className:"token operator"},"|")," ",n.createElement("span",{className:"token keyword"},"function"),"\n","    ","footer",n.createElement("span",{className:"token punctuation"},":")," string ",n.createElement("span",{className:"token operator"},"|")," object ",n.createElement("span",{className:"token operator"},"|")," ",n.createElement("span",{className:"token keyword"},"function"),"\n","    ","dayOfMonth",n.createElement("span",{className:"token punctuation"},":")," string ",n.createElement("span",{className:"token operator"},"|")," object ",n.createElement("span",{className:"token operator"},"|")," ",n.createElement("span",{className:"token keyword"},"function"),"\n","    ","year",n.createElement("span",{className:"token punctuation"},":")," string ",n.createElement("span",{className:"token operator"},"|")," object ",n.createElement("span",{className:"token operator"},"|")," ",n.createElement("span",{className:"token keyword"},"function"),"\n","    ","decade",n.createElement("span",{className:"token punctuation"},":")," string ",n.createElement("span",{className:"token operator"},"|")," object ",n.createElement("span",{className:"token operator"},"|")," ",n.createElement("span",{className:"token keyword"},"function"),"\n","    ","century",n.createElement("span",{className:"token punctuation"},":")," string ",n.createElement("span",{className:"token operator"},"|")," object ",n.createElement("span",{className:"token operator"},"|")," ",n.createElement("span",{className:"token keyword"},"function"),"\n","  ",n.createElement("span",{className:"token punctuation"},"}"),"\n",n.createElement("span",{className:"token punctuation"},"}"),"\n")),n.createElement("h4",null,"required formats"),n.createElement("p",null,n.createElement("em",null,"Localizers must provide default values for each required format.")),n.createElement("ul",null,n.createElement("li",null,n.createElement("code",null,"default"),': the default date display format, generally a "long" format showing both date and time'),n.createElement("li",null,n.createElement("code",null,"date"),": A date only format"),n.createElement("li",null,n.createElement("code",null,"time"),": A time only format"),n.createElement("li",null,n.createElement("code",null,"header"),': The heading of the Calendar month view, contextualizes the current month, e.g. "Jan 2014"'),n.createElement("li",null,n.createElement("code",null,"footer"),": The Calendar footer format, for displaying Today's date"),n.createElement("li",null,n.createElement("code",null,"dayOfMonth"),": The day of the month"),n.createElement("li",null,n.createElement("code",null,"month"),": Month name, used in the Year view of the Calendar"),n.createElement("li",null,n.createElement("code",null,"year"),": year format, used in the Decade view of the Calendar"),n.createElement("li",null,n.createElement("code",null,"decade"),': a decade format, used in the Century view of the Calendar, eg. "2010 - 2019"'),n.createElement("li",null,n.createElement("code",null,"century"),": A century format, used the in the Calendar heading")),n.createElement("h4",null,n.createElement("code",null,"propType")," (optional)"),n.createElement("p",null,"A React PropType that is used to validate the Date formats"),n.createElement("h4",null,n.createElement("code",null,"parse")),n.createElement("p",null,"Convert a locale formatted string to a JavaScript Date object."),n.createElement("pre",{className:"pg-code-section"},n.createElement("code",{className:"language-js"},n.createElement("span",{className:"token keyword"},"function"),n.createElement("span",{className:"token punctuation"},"("),"\n","  ","value",n.createElement("span",{className:"token punctuation"},":")," string",n.createElement("span",{className:"token punctuation"},","),"\n","  ","format",n.createElement("span",{className:"token punctuation"},":")," string",n.createElement("span",{className:"token operator"},"|"),"object",n.createElement("span",{className:"token punctuation"},","),"\n","  ","culture",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token operator"},"?"),"string","\n",n.createElement("span",{className:"token punctuation"},")"),n.createElement("span",{className:"token punctuation"},":")," Date ",n.createElement("span",{className:"token operator"},"|")," ",n.createElement("span",{className:"token keyword"},"null"),"\n")),n.createElement("h4",null,n.createElement("code",null,"format")),n.createElement("p",null,"Convert a Date object to a locale specific string"),n.createElement("pre",{className:"pg-code-section"},n.createElement("code",{className:"language-js"},n.createElement("span",{className:"token keyword"},"function"),n.createElement("span",{className:"token punctuation"},"("),"\n","  ","value",n.createElement("span",{className:"token punctuation"},":")," Date",n.createElement("span",{className:"token punctuation"},","),"\n","  ","format",n.createElement("span",{className:"token punctuation"},":")," string",n.createElement("span",{className:"token operator"},"|"),"object",n.createElement("span",{className:"token punctuation"},","),"\n","  ","culture",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token operator"},"?"),"string","\n",n.createElement("span",{className:"token punctuation"},")"),n.createElement("span",{className:"token punctuation"},":")," string","\n")),n.createElement("h4",null,n.createElement("code",null,"firstOfWeek")),n.createElement("p",null,"Return the locale specific first day of the week from 0 (Sunday) to 6 (Saturday)."),n.createElement("pre",{className:"pg-code-section"},n.createElement("code",{className:"language-js"},n.createElement("span",{className:"token keyword"},"function"),n.createElement("span",{className:"token punctuation"},"("),"\n","  ","culture",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token operator"},"?"),"string","\n",n.createElement("span",{className:"token punctuation"},")"),n.createElement("span",{className:"token punctuation"},":")," number","\n")),n.createElement("h3",null,n.createElement("code",null,"NumberLocalizer")),n.createElement("p",null,"An Object implementing the following api."),n.createElement("pre",{className:"pg-code-section"},n.createElement("code",{className:"language-js"},n.createElement("span",{className:"token punctuation"},"{"),"\n","  ","propType",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token operator"},"?"),"PropType",n.createElement("span",{className:"token punctuation"},","),"\n","  ","formats",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token punctuation"},"{"),"\n","    ",n.createElement("span",{className:"token keyword"},"default"),n.createElement("span",{className:"token punctuation"},":")," string",n.createElement("span",{className:"token operator"},"|"),"object",n.createElement("span",{className:"token punctuation"},";"),"\n","  ",n.createElement("span",{className:"token punctuation"},"}"),n.createElement("span",{className:"token punctuation"},";"),"\n","  ","parse",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token punctuation"},"("),"num",n.createElement("span",{className:"token punctuation"},":")," string",n.createElement("span",{className:"token punctuation"},",")," format",n.createElement("span",{className:"token punctuation"},":")," string",n.createElement("span",{className:"token operator"},"|"),"object",n.createElement("span",{className:"token punctuation"},",")," culture",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token operator"},"?"),"string",n.createElement("span",{className:"token punctuation"},")"),n.createElement("span",{className:"token operator"},"="),n.createElement("span",{className:"token operator"},">")," number ",n.createElement("span",{className:"token operator"},"|")," ",n.createElement("span",{className:"token keyword"},"null"),n.createElement("span",{className:"token punctuation"},";"),"\n","  ","format",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token punctuation"},"("),"num",n.createElement("span",{className:"token punctuation"},":")," number",n.createElement("span",{className:"token punctuation"},",")," format",n.createElement("span",{className:"token punctuation"},":")," string",n.createElement("span",{className:"token operator"},"|"),"object",n.createElement("span",{className:"token punctuation"},",")," culture",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token operator"},"?"),"string",n.createElement("span",{className:"token punctuation"},")"),n.createElement("span",{className:"token operator"},"="),n.createElement("span",{className:"token operator"},">")," string",n.createElement("span",{className:"token punctuation"},";"),"\n","  ","precision",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token punctuation"},"("),"format",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token operator"},"?"),"string",n.createElement("span",{className:"token operator"},"|"),"object",n.createElement("span",{className:"token punctuation"},")")," ",n.createElement("span",{className:"token operator"},"="),n.createElement("span",{className:"token operator"},">")," number",n.createElement("span",{className:"token punctuation"},";"),"\n","  ","decimalChar",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token punctuation"},"("),"format",n.createElement("span",{className:"token punctuation"},":")," string",n.createElement("span",{className:"token operator"},"|"),"object",n.createElement("span",{className:"token punctuation"},",")," culture",n.createElement("span",{className:"token punctuation"},":")," ",n.createElement("span",{className:"token operator"},"?"),"string",n.createElement("span",{className:"token punctuation"},")")," ",n.createElement("span",{className:"token operator"},"="),n.createElement("span",{className:"token operator"},">")," string",n.createElement("span",{className:"token punctuation"},";"),"\n",n.createElement("span",{className:"token punctuation"},"}"),"\n")),n.createElement("h4",null,"required formats"),n.createElement("p",null,n.createElement("em",null,"Localizers must provide default values for each required format.")),n.createElement("ul",null,n.createElement("li",null,n.createElement("code",null,"default")," The number picker display format.")),n.createElement("h4",null,n.createElement("code",null,"propType")," (optional)"),n.createElement("p",null,"A React PropType that is used to validate the number formats."),n.createElement("h4",null,n.createElement("code",null,"parse")),n.createElement("p",null,"Convert a locale specific string to a JavaScript Number."),n.createElement("pre",null,n.createElement("code",null,"function(","\n"," value: number,","\n"," culture: ?string","\n","): number | null","\n")),n.createElement("h4",null,n.createElement("code",null,"format")),n.createElement("p",null,"Convert a Number to a locale specific string."),n.createElement("pre",null,n.createElement("code",null,"function(","\n","  ","value: number,","\n","  ","format: string|object,","\n","  ","culture: ?string","\n","): string","\n")),n.createElement("h4",null,n.createElement("code",null,"decimalChar")," (default: ",n.createElement("code",null,"'.'"),")"),n.createElement("p",null,"Return the decimal separator character."),n.createElement("pre",null,n.createElement("code",null,"function(","\n"," format: string|object;","\n"," culture: ?string","\n","): string","\n")),n.createElement("h4",null,n.createElement("code",null,"precision")),n.createElement("p",null,"Return the decimal precision for a given format or culture. Necessary for dealing with the quirks of floating point math."),n.createElement("pre",null,n.createElement("code",null,"function(","\n"," format: string|object;","\n"," culture: ?string","\n","): number | null","\n"))))}}});
//# sourceMappingURL=component---src-pages-localization-md-ba45ad65c47f0a61ad2b.js.map