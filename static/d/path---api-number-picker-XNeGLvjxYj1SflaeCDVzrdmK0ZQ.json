{"data":{"componentMetadata":{"displayName":"NumberPicker","doclets":{"public":true},"composes":null,"props":[{"name":"value","defaultValue":{"value":"null","computed":false},"doclets":{},"type":{"name":"number","value":null,"raw":null},"description":{"childMarkdownRemark":{"html":"<p>Controls the current value of the NumberPicker.</p>"}}},{"name":"onChange","defaultValue":null,"doclets":{"example":"['onChangePicker', [ [1, null] ]]"},"type":{"name":"func","value":null,"raw":null},"description":{"childMarkdownRemark":{"html":"<p>A callback fired when the current <code class=\"language-text\">value</code> changes.</p>"}}},{"name":"min","defaultValue":{"value":"-Infinity","computed":false},"doclets":{"example":"['prop', ['min', 0]]"},"type":{"name":"number","value":null,"raw":null},"description":{"childMarkdownRemark":{"html":"<p>The minimum number that the NumberPicker value.</p>"}}},{"name":"max","defaultValue":{"value":"Infinity","computed":true},"doclets":{"example":"['prop', ['max', 0]]"},"type":{"name":"number","value":null,"raw":null},"description":{"childMarkdownRemark":{"html":"<p>The maximum number that the NumberPicker value.</p>"}}},{"name":"step","defaultValue":{"value":"1","computed":false},"doclets":{"example":"['prop', ['step', 5]]"},"type":{"name":"number","value":null,"raw":null},"description":{"childMarkdownRemark":{"html":"<p>Amount to increase or decrease value when using the spinner buttons.</p>"}}},{"name":"precision","defaultValue":null,"doclets":{},"type":{"name":"number","value":null,"raw":null},"description":{"childMarkdownRemark":{"html":"<p>Specify how precise the <code class=\"language-text\">value</code> should be when typing, incrementing, or decrementing the value.\nWhen empty, precision is parsed from the current <code class=\"language-text\">format</code> and culture.</p>"}}},{"name":"culture","defaultValue":null,"doclets":{},"type":{"name":"string","value":null,"raw":null},"description":{"childMarkdownRemark":{"html":"<p>Set the culture of the NumberPicker, passed to the configured localizer.</p>"}}},{"name":"format","defaultValue":null,"doclets":{"example":"['prop', { max: 1, min: -1 , defaultValue: 0.2585, format: \"{ style: 'percent' }\" }]"},"type":{"name":"union","value":["string","(value: number, culture: ?string, localizer: Localizer) => string"],"raw":"CustomPropTypes.numberFormat"},"description":{"childMarkdownRemark":{"html":"<p>A format string used to display the number value. Localizer dependent, read <a href=\"../localization\">localization</a> for more info.</p>"}}},{"name":"parse","defaultValue":null,"doclets":{},"type":{"name":"func","value":null,"raw":null},"description":{"childMarkdownRemark":{"html":"<p>Determines how the NumberPicker parses a number from the localized string representation.\nYou can also provide a parser <code class=\"language-text\">function</code> to pair with a custom <code class=\"language-text\">format</code>.</p>"}}},{"name":"tabIndex","defaultValue":null,"doclets":{"ignore":true},"type":{"name":"any","value":null,"raw":null},"description":{"childMarkdownRemark":{"html":"<p>The HTML <code class=\"language-text\">tabindex</code> attribute, controls the order in which focus moves\nvia the TAB key</p>"}}},{"name":"name","defaultValue":null,"doclets":{},"type":{"name":"string","value":null,"raw":null},"description":{"childMarkdownRemark":{"html":"<p>The HTML <code class=\"language-text\">name</code> attribute, passed directly to the input element.</p>"}}},{"name":"placeholder","defaultValue":null,"doclets":{},"type":{"name":"string","value":null,"raw":null},"description":{"childMarkdownRemark":{"html":"<p>Text to display in the input when the value is empty.</p>"}}},{"name":"onKeyDown","defaultValue":null,"doclets":{},"type":{"name":"func","value":null,"raw":null},"description":{"childMarkdownRemark":{"html":"<p>The native <code class=\"language-text\">onKeyDown</code> event, called <code class=\"language-text\">preventDefault</code> will prevent any custom behavior, included keyboard shortcuts.</p>"}}},{"name":"onKeyPress","defaultValue":null,"doclets":{},"type":{"name":"func","value":null,"raw":null},"description":{"childMarkdownRemark":{"html":"<p>The native <code class=\"language-text\">onKeyPress</code> event, called <code class=\"language-text\">preventDefault</code> will stop any custom behavior.</p>"}}},{"name":"onKeyUp","defaultValue":null,"doclets":{},"type":{"name":"func","value":null,"raw":null},"description":null},{"name":"autoFocus","defaultValue":null,"doclets":{},"type":{"name":"bool","value":null,"raw":null},"description":{"childMarkdownRemark":{"html":"<p>Pass focus to the NumberPicker when it mounts.</p>"}}},{"name":"disabled","defaultValue":null,"doclets":{},"type":{"name":"bool","value":null,"raw":"CustomPropTypes.disabled"},"description":null},{"name":"readOnly","defaultValue":null,"doclets":{},"type":{"name":"bool","value":null,"raw":"CustomPropTypes.disabled"},"description":{"childMarkdownRemark":{"html":"<p>Controls the read-only state of the NumberPicker.</p>"}}},{"name":"inputProps","defaultValue":null,"doclets":{},"type":{"name":"object","value":null,"raw":null},"description":{"childMarkdownRemark":{"html":"<p>An object of props that is passed directly to the underlying input component.</p>"}}},{"name":"isRtl","defaultValue":null,"doclets":{},"type":{"name":"bool","value":null,"raw":null},"description":{"childMarkdownRemark":{"html":"<p>Controls the read direction of the NumberPicker.</p>\n<p><strong>Tip:</strong> You can also set the direction for all widgets at once, by exposing\n<code class=\"language-text\">isRtl</code> on <a href=\"https://facebook.github.io/react/docs/context.html\">context</a> in a\ncommon parent component, such as your application root.</p>"}}},{"name":"messages","defaultValue":null,"doclets":{},"type":{"name":"shape","value":{"increment":{"name":"string","required":false},"decrement":{"name":"string","required":false}},"raw":null},"description":{"childMarkdownRemark":{"html":"<p>Object hash containing display text and/or text for screen readers.\nUse the <code class=\"language-text\">messages</code> object to localize widget text or provide custom rendering.</p>"}}},{"name":"open","defaultValue":{"value":"false","computed":false},"doclets":{},"type":null,"description":{"childMarkdownRemark":{"html":"<p>Controls the visibility of the NumberPicker popup. Use <code class=\"language-text\">defaultOpen</code>\nto set an initial value for uncontrolled widgets.\nundefined</p>"}}}],"description":{"childMarkdownRemark":{"frontmatter":{"localized":true,"shortcuts":[{"key":"down arrow","label":"decrement value"},{"key":"up arrow","label":"increment value"},{"key":"home","label":"set value to minimum value"},{"key":"end","label":"set value to maximum value"}]},"html":""}}}},"pageContext":{"jsonName":"api-number-picker","internalComponentName":"ComponentApiNumberPicker","path":"/api/NumberPicker/","component":"/Users/jason/src/react-widgets/www/src/templates/component.js","componentChunkName":"component---src-templates-component-js","context":{"displayName":"NumberPicker","publicComponents":["Calendar","DropdownList","NumberPicker","SelectList","DateTimePicker","Multiselect"]},"updatedAt":1528204565617,"pluginCreator___NODE":"Plugin default-site-plugin","pluginCreatorId":"Plugin default-site-plugin","componentPath":"/Users/jason/src/react-widgets/www/src/templates/component.js","displayName":"NumberPicker","publicComponents":["Calendar","DropdownList","NumberPicker","SelectList","DateTimePicker","Multiselect"]}}